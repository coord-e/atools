#!/bin/bash
# -*- coding: utf-8 -*-
# vim:ft=sh :

source "$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )/atools-common"

usage() {
    echo "Usage: $ATOOLS_PROGNAME problem-list [OPTIONS]"
    echo "  Print full list of problems"
    echo
    echo "Options:"
    echo "  -h, --help"
    echo "  -V, --version"
    echo "  -a, --all"
    echo "  -c, --contest ARG"
    echo
    exit 1
}

for OPT in "$@"
do
    case "$OPT" in
        '-h'|'--help' )
            usage
            exit 1
            ;;
        '-V'|'--version' )
            echo $ATOOLS_VERSION
            exit 1
            ;;
        '-a'|'--all' )
            arg_all=1
            shift 1
            ;;
        '-c'|'--contest' )
            if [[ -z "$2" ]] || [[ "$2" =~ ^-+ ]]; then
                error "$ATOOLS_PROGNAME contest-list: option requires an argument -- $1"
            fi
            arg_contest_id="$2"
            shift 2
            ;;
        '--'|'-' )
            shift 1
            param+=( "$@" )
            break
            ;;
        -*)
            error "$ATOOLS_PROGNAME contest-list: illegal option -- '$(echo $1 | sed 's/^-*//')'"
            ;;
        *)
            if [[ ! -z "$1" ]] && [[ ! "$1" =~ ^-+ ]]; then
                #param=( ${param[@]} "$1" )
                param+=( "$1" )
                shift 1
            fi
            ;;
    esac
done

[ ! -v arg_all -a -z "$ATOOLS_CURRENT_CONTEST" -a -z "$arg_contest_id" ] && error "You must specify contest id with -c when \$ATOOLS_CURRENT_CONTEST or --all is not set."
[ -n "$arg_contest_id" -a -v arg_all ] && error "You can't specify both --all and --contest"

if [ -z "$ATOOLS_CURRENT_CONTEST" ];then
  current_contest=$arg_contest_id
else
  current_contest=$ATOOLS_CURRENT_CONTEST
fi

problems=$(get_api_info problems)
if [ -v arg_all ]; then
  jq ".[].title + \" (\" + .[].id + \")\"" -r <<< $problems
else
  jq ".[] | if .contest_id == \"${current_contest}\" then .title + \" (\" + .id + \")\" else empty end" -r <<< $problems
fi

